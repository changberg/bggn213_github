{
  "hash": "7170a811acb46a0ccf06d19b10fb68fb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"101824_JCW_bioinfo_class6HW\"\n---\n\n\n\n10/18/24 Homework (Class 6)\n\nWhat hath been bestowed upon us:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Can you improve this analysis code?\nlibrary(bio3d)\ns1 <- read.pdb(\"4AKE\") # kinase with drug\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Note: Accessing on-line PDB file\n```\n\n\n:::\n\n```{.r .cell-code}\ns2 <- read.pdb(\"1AKE\") # kinase no drug\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Note: Accessing on-line PDB file\n   PDB has ALT records, taking A only, rm.alt=TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\ns3 <- read.pdb(\"1E4Y\") # kinase with drug\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Note: Accessing on-line PDB file\n```\n\n\n:::\n\n```{.r .cell-code}\ns1.chainA <- trim.pdb(s1, chain=\"A\", elety=\"CA\") #elety means \"element type\"\ns2.chainA <- trim.pdb(s2, chain=\"A\", elety=\"CA\") #CA means \"alpha carbon\"\ns3.chainA <- trim.pdb(s3, chain=\"A\", elety=\"CA\") \n\ns1.b <- s1.chainA$atom$b\ns2.b <- s2.chainA$atom$b\ns3.b <- s3.chainA$atom$b\n\nplotb3(s1.b, sse=s1.chainA, typ=\"l\", ylab=\"Bfactor\")\n```\n\n::: {.cell-output-display}\n![](101824_JCW_bioingo_class6HW_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplotb3(s2.b, sse=s2.chainA, typ=\"l\", ylab=\"Bfactor\")\n```\n\n::: {.cell-output-display}\n![](101824_JCW_bioingo_class6HW_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplotb3(s3.b, sse=s3.chainA, typ=\"l\", ylab=\"Bfactor\")\n```\n\n::: {.cell-output-display}\n![](101824_JCW_bioingo_class6HW_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n:::\n\n\n\nMy attempt:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npleppy <- function(pepseq){ #pepseq is whatever peptide name you want to look for\n  library(bio3d) #loads the bio3d library\n \n  s <- read.pdb(pepseq) #will search the db for whatever pepseq you want, assigned   to variable \"s\"\n  \n  s.chainA <- trim.pdb(s, chain=\"A\", elety=\"CA\") #this narrows your search to just   the \"A\" chain from the alpha carbon\n  \n  s.b <- s.chainA$atom$b #further narrows your search to the \"B-factor\" of the      protein\n  \n  plotb3(s.b, sse=s.chainA, typ=\"l\", ylab=\"Bfactor\")\n \n}\n```\n:::\n\n\n\nNow plot all 3 peptides\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_peps <- c(\"4AKE\", \"1AKE\", \"1E4Y\")\nsapply(test_peps, pleppy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Note: Accessing on-line PDB file\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in get.pdb(file, path = tempdir(), verbose = FALSE):\n/var/folders/f_/cyy9xbr92bvbqb1y55vkxd5h0000gn/T//RtmpKQpARy/4AKE.pdb exists.\nSkipping download\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](101824_JCW_bioingo_class6HW_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Note: Accessing on-line PDB file\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in get.pdb(file, path = tempdir(), verbose = FALSE):\n/var/folders/f_/cyy9xbr92bvbqb1y55vkxd5h0000gn/T//RtmpKQpARy/1AKE.pdb exists.\nSkipping download\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   PDB has ALT records, taking A only, rm.alt=TRUE\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](101824_JCW_bioingo_class6HW_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Note: Accessing on-line PDB file\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in get.pdb(file, path = tempdir(), verbose = FALSE):\n/var/folders/f_/cyy9xbr92bvbqb1y55vkxd5h0000gn/T//RtmpKQpARy/1E4Y.pdb exists.\nSkipping download\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](101824_JCW_bioingo_class6HW_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`4AKE`\nNULL\n\n$`1AKE`\nNULL\n\n$`1E4Y`\nNULL\n```\n\n\n:::\n:::\n",
    "supporting": [
      "101824_JCW_bioingo_class6HW_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}