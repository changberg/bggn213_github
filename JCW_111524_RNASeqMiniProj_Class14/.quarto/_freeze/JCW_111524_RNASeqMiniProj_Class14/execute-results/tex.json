{
  "hash": "a29b0a6ad66514a0c13ad15958235af9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"RNA Seq Mini Proj Class14\"\nauthor: \"Janie Chang-Weinberg (A69037446)\"\nformat: pdf\n---\n\n\n\n## Import Data\n\nWe need two things:\nCounts\nMetaData (what DESeq calls colData- as it describes the columns in Counts)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncounts <- read.csv(\"GSE37704_featurecounts.csv\", row.names=1)\nmetadata <- read.csv(\"GSE37704_metadata.csv\")\n```\n:::\n\n\n\nStart with a sneak peak:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(counts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                length SRR493366 SRR493367 SRR493368 SRR493369 SRR493370\nENSG00000186092    918         0         0         0         0         0\nENSG00000279928    718         0         0         0         0         0\nENSG00000279457   1982        23        28        29        29        28\nENSG00000278566    939         0         0         0         0         0\nENSG00000273547    939         0         0         0         0         0\nENSG00000187634   3214       124       123       205       207       212\n                SRR493371\nENSG00000186092         0\nENSG00000279928         0\nENSG00000279457        46\nENSG00000278566         0\nENSG00000273547         0\nENSG00000187634       258\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(metadata)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         id     condition\n1 SRR493366 control_sirna\n2 SRR493367 control_sirna\n3 SRR493368 control_sirna\n4 SRR493369      hoxa1_kd\n5 SRR493370      hoxa1_kd\n6 SRR493371      hoxa1_kd\n```\n\n\n:::\n:::\n\n\n\nWe want the columns in `counts` to match the rows in the `metadata`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(counts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"length\"    \"SRR493366\" \"SRR493367\" \"SRR493368\" \"SRR493369\" \"SRR493370\"\n[7] \"SRR493371\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata$id\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"SRR493366\" \"SRR493367\" \"SRR493368\" \"SRR493369\" \"SRR493370\" \"SRR493371\"\n```\n\n\n:::\n:::\n\n\nSince `counts` and `metadata` columns do not match, we must remove the `length` column from the `counts` dataset\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountData <- counts[,-1]\nhead(countData)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                SRR493366 SRR493367 SRR493368 SRR493369 SRR493370 SRR493371\nENSG00000186092         0         0         0         0         0         0\nENSG00000279928         0         0         0         0         0         0\nENSG00000279457        23        28        29        29        28        46\nENSG00000278566         0         0         0         0         0         0\nENSG00000273547         0         0         0         0         0         0\nENSG00000187634       124       123       205       207       212       258\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall(colnames(countData) == metadata$id)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\nyay now they match.\n\n\n## Data CleanUp\n### Must filter out zero counts\n\nIt is standard practice to remove any genes/transcripts that we have no data for, ie. zero counts in all columns \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nto.keep.inds <- rowSums(countData) > 0 \ncleanCounts <- countData[to.keep.inds,]\nhead(cleanCounts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                SRR493366 SRR493367 SRR493368 SRR493369 SRR493370 SRR493371\nENSG00000279457        23        28        29        29        28        46\nENSG00000187634       124       123       205       207       212       258\nENSG00000188976      1637      1831      2383      1226      1326      1504\nENSG00000187961       120       153       180       236       255       357\nENSG00000187583        24        48        65        44        48        64\nENSG00000187642         4         9        16        14        16        16\n```\n\n\n:::\n:::\n\n\n\n\n## Setup for DESeq\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DESeq2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndds <- DESeqDataSetFromMatrix(countData = cleanCounts,\n                       colData = metadata,\n                       design= ~condition)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in DESeqDataSet(se, design = design, ignoreRank): some variables in\ndesign formula are characters, converting to factors\n```\n\n\n:::\n:::\n\n\n\n## DESeq\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds <- DESeq(dds)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nestimating size factors\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nestimating dispersions\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\ngene-wise dispersion estimates\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nmean-dispersion relationship\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nfinal dispersion estimates\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nfitting model and testing\n```\n\n\n:::\n\n```{.r .cell-code}\nres <- results(dds)\n```\n:::\n\n\n\n\n## Inspect Results\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nlog2 fold change (MLE): condition hoxa1 kd vs control sirna \nWald test p-value: condition hoxa1 kd vs control sirna \nDataFrame with 6 rows and 6 columns\n                 baseMean log2FoldChange     lfcSE       stat      pvalue\n                <numeric>      <numeric> <numeric>  <numeric>   <numeric>\nENSG00000279457   29.9136      0.1792571 0.3248216   0.551863 5.81042e-01\nENSG00000187634  183.2296      0.4264571 0.1402658   3.040350 2.36304e-03\nENSG00000188976 1651.1881     -0.6927205 0.0548465 -12.630158 1.43989e-36\nENSG00000187961  209.6379      0.7297556 0.1318599   5.534326 3.12428e-08\nENSG00000187583   47.2551      0.0405765 0.2718928   0.149237 8.81366e-01\nENSG00000187642   11.9798      0.5428105 0.5215599   1.040744 2.97994e-01\n                       padj\n                  <numeric>\nENSG00000279457 6.86555e-01\nENSG00000187634 5.15718e-03\nENSG00000188976 1.76549e-35\nENSG00000187961 1.13413e-07\nENSG00000187583 9.19031e-01\nENSG00000187642 4.03379e-01\n```\n\n\n:::\n:::\n\n\n\n\n## Data Viz\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(res$log2FoldChange, -log(res$padj))\n```\n\n::: {.cell-output-display}\n![](JCW_111524_RNASeqMiniProj_Class14_files/figure-pdf/unnamed-chunk-13-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Pathway Analysis\n\n### Annotation of genes\n\nFirst I need to translate my Ensembl IDs in my `res` object to Entrez and gene symbol formats.\n\nFor this I will use the AnnotationDbi package and its `mapIds()` function\n\nNeed to know what format stuff is currently in, and what we would like to \"translate\" them into.\n\nWe currently have Ensembl IDs, but to use KEGG, we need to use Entrez IDs.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(AnnotationDbi)\nlibrary(org.Hs.eg.db)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolumns(org.Hs.eg.db)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"ACCNUM\"       \"ALIAS\"        \"ENSEMBL\"      \"ENSEMBLPROT\"  \"ENSEMBLTRANS\"\n [6] \"ENTREZID\"     \"ENZYME\"       \"EVIDENCE\"     \"EVIDENCEALL\"  \"GENENAME\"    \n[11] \"GENETYPE\"     \"GO\"           \"GOALL\"        \"IPI\"          \"MAP\"         \n[16] \"OMIM\"         \"ONTOLOGY\"     \"ONTOLOGYALL\"  \"PATH\"         \"PFAM\"        \n[21] \"PMID\"         \"PROSITE\"      \"REFSEQ\"       \"SYMBOL\"       \"UCSCKG\"      \n[26] \"UNIPROT\"     \n```\n\n\n:::\n:::\n\n\n\nLet's map to \"SYMBOL,\" \"ENTREZID,\" and \"GENENAME,\" from our \"ENSEMBL\" ids.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres$genename <- mapIds(org.Hs.eg.db, \n                       keys=rownames(res), \n                       keytype = \"ENSEMBL\",\n                       column = \"GENENAME\",\n                       multiVals = \"first\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n'select()' returned 1:many mapping between keys and columns\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nlog2 fold change (MLE): condition hoxa1 kd vs control sirna \nWald test p-value: condition hoxa1 kd vs control sirna \nDataFrame with 6 rows and 7 columns\n                 baseMean log2FoldChange     lfcSE       stat      pvalue\n                <numeric>      <numeric> <numeric>  <numeric>   <numeric>\nENSG00000279457   29.9136      0.1792571 0.3248216   0.551863 5.81042e-01\nENSG00000187634  183.2296      0.4264571 0.1402658   3.040350 2.36304e-03\nENSG00000188976 1651.1881     -0.6927205 0.0548465 -12.630158 1.43989e-36\nENSG00000187961  209.6379      0.7297556 0.1318599   5.534326 3.12428e-08\nENSG00000187583   47.2551      0.0405765 0.2718928   0.149237 8.81366e-01\nENSG00000187642   11.9798      0.5428105 0.5215599   1.040744 2.97994e-01\n                       padj               genename\n                  <numeric>            <character>\nENSG00000279457 6.86555e-01                     NA\nENSG00000187634 5.15718e-03 sterile alpha motif ..\nENSG00000188976 1.76549e-35 NOC2 like nucleolar ..\nENSG00000187961 1.13413e-07 kelch like family me..\nENSG00000187583 9.19031e-01 pleckstrin homology ..\nENSG00000187642 4.03379e-01 PPARGC1 and ESRR ind..\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nres$symbol <- mapIds(org.Hs.eg.db, \n                       keys=rownames(res), \n                       keytype = \"ENSEMBL\",\n                       column = \"SYMBOL\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n'select()' returned 1:many mapping between keys and columns\n```\n\n\n:::\n\n```{.r .cell-code}\nres$entrezid <- mapIds(org.Hs.eg.db, \n                       keys=rownames(res), \n                       keytype = \"ENSEMBL\",\n                       column = \"ENTREZID\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n'select()' returned 1:many mapping between keys and columns\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nlog2 fold change (MLE): condition hoxa1 kd vs control sirna \nWald test p-value: condition hoxa1 kd vs control sirna \nDataFrame with 6 rows and 9 columns\n                 baseMean log2FoldChange     lfcSE       stat      pvalue\n                <numeric>      <numeric> <numeric>  <numeric>   <numeric>\nENSG00000279457   29.9136      0.1792571 0.3248216   0.551863 5.81042e-01\nENSG00000187634  183.2296      0.4264571 0.1402658   3.040350 2.36304e-03\nENSG00000188976 1651.1881     -0.6927205 0.0548465 -12.630158 1.43989e-36\nENSG00000187961  209.6379      0.7297556 0.1318599   5.534326 3.12428e-08\nENSG00000187583   47.2551      0.0405765 0.2718928   0.149237 8.81366e-01\nENSG00000187642   11.9798      0.5428105 0.5215599   1.040744 2.97994e-01\n                       padj               genename      symbol    entrezid\n                  <numeric>            <character> <character> <character>\nENSG00000279457 6.86555e-01                     NA          NA          NA\nENSG00000187634 5.15718e-03 sterile alpha motif ..      SAMD11      148398\nENSG00000188976 1.76549e-35 NOC2 like nucleolar ..       NOC2L       26155\nENSG00000187961 1.13413e-07 kelch like family me..      KLHL17      339451\nENSG00000187583 9.19031e-01 pleckstrin homology ..     PLEKHN1       84069\nENSG00000187642 4.03379e-01 PPARGC1 and ESRR ind..       PERM1       84808\n```\n\n\n:::\n:::\n\n\n\nBefore going any further lets focus in on a subset of \"top\" hits.\n\nWe can use a starting point log2FC of +/-2 and an adjusted P-value of 0.05\n\nLet's do the foldchange one first\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop.inds <- (abs(res$log2FoldChange) > 2) & (res$padj <= 0.05)\ntop.inds[is.na(top.inds)] <- FALSE\n```\n:::\n\n\n\nLet's save our \"top genes\" to a .csv file! \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop.genes <- res[top.inds,]\nwrite.csv(top.genes, file=\"top_geneset.csv\")\n```\n:::\n\n\n\nNow we can do some pathway analysis (finally!)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gage)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(gageData)\nlibrary(pathview)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n##############################################################################\nPathview is an open source software package distributed under GNU General\nPublic License version 3 (GPLv3). Details of GPLv3 is available at\nhttp://www.gnu.org/licenses/gpl-3.0.html. Particullary, users are required to\nformally cite the original Pathview paper (not just mention it) in publications\nor products. For details, do citation(\"pathview\") within R.\n\nThe pathview downloads and uses KEGG data. Non-academic uses may require a KEGG\nlicense agreement (details at http://www.kegg.jp/kegg/legal.html).\n##############################################################################\n```\n\n\n:::\n\n```{.r .cell-code}\ndata(kegg.sets.hs)\ndata(sigmet.idx.hs)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# focus on signaling and metabolic pathways\nkegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfoldchanges = res$log2FoldChange\nnames(foldchanges) = res$entrezid\nhead(foldchanges)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       <NA>      148398       26155      339451       84069       84808 \n 0.17925708  0.42645712 -0.69272046  0.72975561  0.04057653  0.54281049 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkeggres <- gage(foldchanges, gsets = kegg.sets.hs)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(keggres)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$names\n[1] \"greater\" \"less\"    \"stats\"  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(keggres$less)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                         p.geomean stat.mean        p.val\nhsa04110 Cell cycle                   8.995727e-06 -4.378644 8.995727e-06\nhsa03030 DNA replication              9.424076e-05 -3.951803 9.424076e-05\nhsa03013 RNA transport                1.246882e-03 -3.059466 1.246882e-03\nhsa03440 Homologous recombination     3.066756e-03 -2.852899 3.066756e-03\nhsa04114 Oocyte meiosis               3.784520e-03 -2.698128 3.784520e-03\nhsa00010 Glycolysis / Gluconeogenesis 8.961413e-03 -2.405398 8.961413e-03\n                                            q.val set.size         exp1\nhsa04110 Cell cycle                   0.001448312      121 8.995727e-06\nhsa03030 DNA replication              0.007586381       36 9.424076e-05\nhsa03013 RNA transport                0.066915974      144 1.246882e-03\nhsa03440 Homologous recombination     0.121861535       28 3.066756e-03\nhsa04114 Oocyte meiosis               0.121861535      102 3.784520e-03\nhsa00010 Glycolysis / Gluconeogenesis 0.212222694       53 8.961413e-03\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npathview(foldchanges, pathway.id =\"hsa04110\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInfo: Working in directory /Users/janiec-w/Desktop/Classes/BGGN213 Bioinformatics/pRojects/JCW_111524_RNASeqMiniProj_Class14\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInfo: Writing image file hsa04110.pathview.png\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(go.sets.hs)\ndata(go.subs.hs)\n\n# Focus on Biological Process subset of GO\ngobpsets = go.sets.hs[go.subs.hs$BP]\n\ngores = gage(foldchanges, gsets=gobpsets)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(gores$less)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                            p.geomean stat.mean        p.val\nGO:0048285 organelle fission             1.536227e-15 -8.063910 1.536227e-15\nGO:0000280 nuclear division              4.286961e-15 -7.939217 4.286961e-15\nGO:0007067 mitosis                       4.286961e-15 -7.939217 4.286961e-15\nGO:0000087 M phase of mitotic cell cycle 1.169934e-14 -7.797496 1.169934e-14\nGO:0007059 chromosome segregation        2.028624e-11 -6.878340 2.028624e-11\nGO:0000236 mitotic prometaphase          1.729553e-10 -6.695966 1.729553e-10\n                                                q.val set.size         exp1\nGO:0048285 organelle fission             5.841698e-12      376 1.536227e-15\nGO:0000280 nuclear division              5.841698e-12      352 4.286961e-15\nGO:0007067 mitosis                       5.841698e-12      352 4.286961e-15\nGO:0000087 M phase of mitotic cell cycle 1.195672e-11      362 1.169934e-14\nGO:0007059 chromosome segregation        1.658603e-08      142 2.028624e-11\nGO:0000236 mitotic prometaphase          1.178402e-07       84 1.729553e-10\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), \"symbol\"]\nprint(paste(\"Total number of significant genes:\", length(sig_genes)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Total number of significant genes: 8147\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(sig_genes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nENSG00000187634 ENSG00000188976 ENSG00000187961 ENSG00000188290 ENSG00000187608 \n       \"SAMD11\"         \"NOC2L\"        \"KLHL17\"          \"HES4\"         \"ISG15\" \nENSG00000188157 \n         \"AGRN\" \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.table(sig_genes, \n            file=\"significant_genes.txt\", \n            row.names=FALSE, \n            col.names=FALSE, \n            quote=FALSE)\n```\n:::\n\n\n\n![Overview](R-HSA-68886-2.png)\n\n",
    "supporting": [
      "JCW_111524_RNASeqMiniProj_Class14_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}